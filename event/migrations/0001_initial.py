# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-02-05 06:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventGroups',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=256)),
            ],
            options={
                'db_table': 'eventgroups',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EventGroupUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_group_user_id', to='event.EventGroups')),
            ],
        ),
        migrations.CreateModel(
            name='EventUsers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(default='', max_length=256)),
                ('password', models.CharField(default='', max_length=256)),
                ('repassword', models.CharField(default='', max_length=256)),
                ('email', models.CharField(default='', max_length=256)),
                ('group', models.ManyToManyField(related_name='group_ids', to='event.EventGroups')),
            ],
            options={
                'db_table': 'eventusers',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='eventgroupuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_group_user_id', to='event.EventUsers'),
        ),
        migrations.AddField(
            model_name='eventgroups',
            name='user',
            field=models.ManyToManyField(related_name='user_ids', through='event.EventGroupUser', to='event.EventUsers'),
        ),
    ]
